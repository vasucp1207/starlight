---
import { Icon } from '@astrojs/starlight/components';
import { Icons } from '../../../packages/starlight/components/Icons';

const icons = Object.keys(Icons) as (keyof typeof Icons)[];
---

<div class="icons-grid">
	{
		icons.map((icon) => {
			return (
				<button class="icon-preview" aria-label={`Copy ${icon} icon to clipboard`} id={icon}>
					<Icon name={icon} size="1.5rem" />
					<span aria-live="polite">{icon}</span>
				</button>
			);
		})
	}
</div>

<script>
  const icons = document.querySelectorAll('.icon-preview');
  icons.forEach((icon) => {
		let intervalId;
    icon.addEventListener('click', () => {
			const iconName = icon.id;
			const copiedValue = `<Icon name="${iconName}" size="2rem" />`;
			navigator.clipboard.writeText(copiedValue);
			
			const iconText = icon.children[1];
			const confirm = icon.children[2];
			confirm?.classList.toggle('copied');
			iconText?.classList.toggle('icon-name');

			intervalId = setTimeout(() => {
				confirm?.classList.toggle('copied');
				iconText?.classList.toggle('icon-name');
			}, 1000)
			
    });
		clearInterval(intervalId);
  });
</script>

<style>
	.icons-grid {
		display: grid;
		gap: 1rem;
		grid-template-columns: repeat(auto-fit, minmax(8rem, 1fr));
	}

	.icons-grid .icon-preview {
		align-items: center;
		justify-content: center;
		text-align: center;
		border: 1px solid var(--sl-color-gray-5);
		display: flex;
		flex-direction: column;
		font-size: var(--sl-text-sm);
		gap: 0.25rem;
		margin: 0;
		padding: 0.75rem;
	}

	.icon-preview:hover {
		cursor: pointer;
		border: 1px solid var(--sl-color-gray-4);
		background: var(--sl-color-gray-5);
	}

	.copied {
		display: none;
	}

	.icon-name {
		display: none;
	}
</style>
